# TODO

0.5.0 *:
    ✔ new logger @done(24-06-09 22:49)
    ✔ upgrade uvpipx.json / inject @done(24-06-15 11:25)
    ✔ avoid to expose script like python* or pip* without change name @done(24-06-09 22:49)
    ✔ test inject / uninject basic @done(24-06-12 20:25)
    ✔ rethink install --force @done(24-06-14 18:26)
    ✔ uninstall-all @done(24-06-13 18:49)


0.x+1.0:
    ☐ inject at install time (injected exposed as/like main)
    ☐ info show info about install set in advanced view
    ☐ upgrade also injected but no touch exposed
    ☐ doc about cache
    ☐ dockerfile sample


0.x+2.0:
    ☐ "expose clean/clean-all" link doctor to remove bad link ? maybe ask confirmation
    ☐ "expose add" link doctor to remove bad link ? maybe ask confirmation
    ☐ reinstall (uninstall/install) main version without injected
    ☐ reinstall (uninstall/install) with injected / -all
    ☐ upgrade option --force-upgrade to allow to not respect original pipspec and change pipspec to new version
    ☐ upgrade launch doctor to remove probable dead app


0.x+3.0 venv power:
    ☐ install
    ☐ uninstall
    ☐ inject
    ☐ uninject
    ☐ upgrade


0.x+4.0:
    ☐ info bin not exposed
    ☐ reexpose --add X (can use wildcard) / force
    ☐ reexpose --remove X (can use wildcard)
    
    
currently not planned :
    ☐ upgrade-all --skip [ args ]
    ☐ inject (option to add bin) [ args ]
    ☐ uninject (remove uninstalled bin) [ args ]

    ☐ maybe provide a way to install from url spec and proposed recommanded setup
    ☐ maybe provide a install way from pure-bash or pure-powershell with indygreg a https://github.com/indygreg/python-build-standalone

    ☐ environment

    ☐ +info ... --venv-name
    ☐ runpip (replace by venv)
    ☐ run
    ☐ completions (never or far far away ...)


## Program to try

<https://github.com/kellyjonbrazil/jc>

<https://github.com/harelba/q>

<https://github.com/tqdm/tqdm>

<https://github.com/VaasuDevanS/cowsay-python>

<https://github.com/sharkdp/shell-functools>


# def venv(package_name, cmdline, *, venv_name: Union[None, str] = None):
#     """venv is specific to uvpipx. it will replace inject, runpip, uninject

#     in fact runpip should be replace by uvpipx venv "truc" uv -- pip install me
#     """
#     venv_name_ = venv_name or package_name
#     pck_venv = config.uvpipx_venvs / venv_name_

#     if not (pck_venv / ".venv").exists():
#         raise RuntimeError("{pck_venv} not ready")

#     # VIRTUAL_ENV=pck_venv / ".venv"
#     # PATH="$VIRTUAL_ENV/bin:$PATH"
#     # unset PYTHONHOME

#     rc, stdo, stde = cmd_run(
#         pck_venv / ".venv" / "bin",
#         cmdline,
#     )
#     print(stdo)
#     print(stde, file=sys.stderr)
#     sys.exit(rc)
*
